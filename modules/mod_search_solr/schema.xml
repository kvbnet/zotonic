<?xml version="1.0" encoding="UTF-8" ?>
<!--
     Schema file for Zotonic rsc records stored in Solr for fast searching.

     Arjan Scherpenisse <arjan@scherpenisse.net>, March 2010
-->
<schema name="zotonic" version="1.2">
    <types>
        <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
        <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
        <fieldtype name="binary" class="solr.BinaryField"/>
        <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>

        <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>

        <fieldType name="random" class="solr.RandomSortField" indexed="true" />

        <!--
             <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
                 <analyzer type="index">
                     <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                     <filter class="solr.StopFilterFactory"
                             ignoreCase="true"
                             words="stopwords.txt"
                             enablePositionIncrements="true"
                             />
                     <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                     <filter class="solr.LowerCaseFilterFactory"/>
                     <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
                 </analyzer>
                 <analyzer type="query">
                     <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                     <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
                     <filter class="solr.StopFilterFactory"
                             ignoreCase="true"
                             words="stopwords.txt"
                             enablePositionIncrements="true"
                             />
                     <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
                     <filter class="solr.LowerCaseFilterFactory"/>
                     <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
                 </analyzer>
             </fieldType>
             -->

        <!-- A general unstemmed text field - good if one does not know the language of the field -->
        <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="0"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
                <filter class="solr.StopFilterFactory"
                        ignoreCase="true"
                        words="stopwords.txt"
                        enablePositionIncrements="true"
                        />
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0"/>
                <filter class="solr.LowerCaseFilterFactory"/>
            </analyzer>
        </fieldType>

        <!-- since fields of this type are by default not stored or indexed,
             any data added to them will be ignored outright.  --> 
        <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" /> 

    </types>


    <fields>
        <!-- Valid attributes for fields:
             name: mandatory - the name for the field
             type: mandatory - the name of a previously defined type from the 
             <types> section
                 indexed: true if this field should be indexed (searchable or sortable)
                 stored: true if this field should be retrievable
                 compressed: [false] if this field should be stored using gzip compression
                 (this will only apply if the field type is compressable; among
                 the standard field types, only TextField and StrField are)
                 multiValued: true if this field may contain multiple values per document
                 omitNorms: (expert) set to true to omit the norms associated with
                 this field (this disables length normalization and index-time
                 boosting for the field, and saves some memory).  Only full-text
                 fields or fields that need an index-time boost need norms.
                 termVectors: [false] set to true to store the term vector for a
                 given field.
                 When using MoreLikeThis, fields used for similarity should be
                 stored for best performance.
                 termPositions: Store position information with the term vector.  
                 This will increase storage costs.
                 termOffsets: Store offset information with the term vector. This 
                 will increase storage costs.
                 default: a value that should be used if no value is specified
                 when adding a document.
                 -->

        <!-- regular rsc fields -->

        <field name="id" type="int" indexed="true" stored="true" required="true" />
        <field name="version" type="int" indexed="true" stored="true" required="true" />

        <field name="uri" type="string" indexed="true" stored="true" />
        <field name="name" type="string" indexed="true" stored="true" />
        <field name="page_path" type="string" indexed="true" stored="true" />

        <field name="is_authoritative" type="boolean" indexed="true" stored="true" />
        <field name="is_published" type="boolean" indexed="true" stored="true"  />
        <field name="is_featured" type="boolean" indexed="true" stored="true"  />
        <field name="is_protected" type="boolean" indexed="true" stored="true"  />

        <field name="modified" type="date" indexed="true" stored="true"/>
        <field name="created" type="date" indexed="true" stored="true"/>
        <field name="modifier_id" type="int" indexed="true" stored="true" />
        <field name="creator_id" type="int" indexed="true" stored="true" />

        <field name="publication_start" type="date" indexed="true" stored="true"/>
        <field name="publication_end" type="date" indexed="true" stored="true"/>

        <!-- rsc category, for a rsc in a/b/c, it will store ids of all a, b, c for nice facetting.
             -->
        <field name="category" type="string" indexed="true" stored="true" multiValued="true" />

        <!-- primary rsc category -->
        <field name="category_id" type="int" indexed="true" stored="true" />



        <!-- text fields -->

        <field name="title" type="text" indexed="true" stored="true" omitNorms="true"  />
        <field name="summary" type="text" indexed="true" stored="true" termVectors="true" />
        <field name="body" type="text" indexed="true" />

        <!-- all text, collected -->
        <field name="text" type="text" indexed="true" multiValued="true" />

        <!-- pivot -->
        <field name="pivot_title" type="string" indexed="true" />

        <field name="first_name" type="text" indexed="true" stored="true"/>
        <field name="surname" type="text" indexed="true" stored="true"/>
        <field name="gender" type="string" indexed="true" stored="true"/>

        <field name="date_start" type="date" indexed="true" stored="true"/>
        <field name="date_end" type="date" indexed="true" stored="true"/>

        <!-- needed? -->
        <!-- <field name="date_start_month_day" type="int" indexed="true" stored="true"/> -->
        <!-- <field name="date_end_month_day" type="int" indexed="true" stored="true"/> -->

        <field name="street" type="text" indexed="true" stored="true"/>
        <field name="city" type="text" indexed="true" stored="true"/>
        <field name="postcode" type="text" indexed="true" stored="true"/>

        <field name="state" type="string" indexed="true" stored="true"/>
        <field name="country" type="string" indexed="true" stored="true"/>
        <field name="geocode" type="string" indexed="true" stored="true"/>


        <!-- edges -->

        <!-- all subjects/objects -->
        <field name="s" type="int" multiValued="true" stored="true" />
        <field name="o" type="int" multiValued="true" stored="true" termVectors="true" /><!-- for "more like this"; will match on similar objects. -->

        <!-- edges by predicate name, eg s_related -->
        <dynamicField name="s_*" type="int" indexed="true" multiValued="true" stored="true" />
        <dynamicField name="o_*" type="int" indexed="true" multiValued="true" stored="true" />


        <!-- special field for matching on title -->
        <field name="match_title" type="text" indexed="true" termVectors="true" />



        <!-- extra fields can be added (by zotonic modules hooking into the solr module) -->
        <dynamicField name="x_*" type="text" stored="true" multiValued="true" />

        <!-- integers -->
        <dynamicField name="x_int_*" type="int" />

    </fields>

    <!-- Field to use to determine and enforce document uniqueness. 
         Unless this field is marked with required="false", it will be a required field
         -->
    <uniqueKey>id</uniqueKey>

    <!-- field for the QueryParser to use when an explicit fieldname is absent -->
    <defaultSearchField>text</defaultSearchField>

    <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
    <solrQueryParser defaultOperator="OR"/>

    <!-- copyField commands copy one field to another at the time a document
         is added to the index.  It's used either to index the same field differently,
         or to add multiple fields to the same field for easier/faster searching.  -->

    <copyField source="title" dest="match_title"/>
    <!--
    <copyField source="title" dest="text"/>
    <copyField source="summary" dest="text"/>
    <copyField source="body" dest="text"/>
         -->

</schema>
